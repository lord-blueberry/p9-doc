\BOOKMARK [1][-]{section.1}{Introduction}{}% 1
\BOOKMARK [1][-]{section.2}{Methods}{}% 2
\BOOKMARK [1][-]{section.3}{Coordinate descent deconvolution}{}% 3
\BOOKMARK [2][-]{subsection.3.1}{Elastic net regularization}{section.3}% 4
\BOOKMARK [2][-]{subsection.3.2}{Serial coordinate descent algorithm}{section.3}% 5
\BOOKMARK [3][-]{subsubsection.3.2.1}{Step 1: Choosing single a pixel}{subsection.3.2}% 6
\BOOKMARK [3][-]{subsubsection.3.2.2}{Step 2: Optimizing a single pixel}{subsection.3.2}% 7
\BOOKMARK [3][-]{subsubsection.3.2.3}{Inefficient implementation pseudo-code}{subsection.3.2}% 8
\BOOKMARK [2][-]{subsection.3.3}{Efficient implementation}{section.3}% 9
\BOOKMARK [3][-]{subsubsection.3.3.1}{Edge handling of the convolution}{subsection.3.3}% 10
\BOOKMARK [3][-]{subsubsection.3.3.2}{Efficient calculation of the Lipschitz constants}{subsection.3.3}% 11
\BOOKMARK [3][-]{subsubsection.3.3.3}{Using a map of gradients}{subsection.3.3}% 12
\BOOKMARK [2][-]{subsection.3.4}{Efficient implementation pseudo-code}{section.3}% 13
\BOOKMARK [2][-]{subsection.3.5}{GPU implementation}{section.3}% 14
\BOOKMARK [2][-]{subsection.3.6}{Distributed implementaion MPI}{section.3}% 15
\BOOKMARK [2][-]{subsection.3.7}{Serial coordinate descent and similarities to the CLEAN algorithm}{section.3}% 16
